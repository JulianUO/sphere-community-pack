[events e_osi_crafting]
on=@skillabort
if <def.scp.CraftingSystem> == 0
return 0
endif
if <def0.scp.NewCrafting_<serv.skill.<argn>.key>> == 0
return 0
endif
ctag.craft.message = <def.scp.craft_msg_fail>

on=@skillfail
if <def.scp.CraftingSystem> == 0
return 0
endif
if <def0.scp.NewCrafting_<serv.skill.<argn>.key>> == 1
	if !<isempty <ctag.craft.skill>>
	craftskill <ctag0.craft.skill>
	endif
endif

on=@skillmakeitem
if <def.scp.CraftingSystem> == 0
return 0
endif
if <def0.scp.NewCrafting_<serv.skill.<argn>.key>> == 0
return 0
endif
ref2 = <act.uid>
ref2.name = <serv.itemdef.<ref2.baseid>.name>
local.skillmake = <serv.skill.<action>.key> // someone explain why would action not be the crafting skill and i'll add the statement.
local.success = <eval (<local.skillmake> + (250 + (<local.skillmake> / 3))) - <<serv.skill.<action>.key>>>
if <r> < <local.success>
ctag.craft.message = <def.scp.craft_msg_fail>
	if !<isempty <ctag.craft.skill>>
	craftskill <ctag0.craft.skill>
	endif
ref1.remove
return 1
endif
ctag.craft.message = You create <ref2.name>.
if <craft_exceptionalchance> < <r>
	if !<isempty <def.<ctag0.craft.skill>_exceptional_bonus>>
	ref2.<def.<ctag0.craft.skill>_exceptional_bonus>
	endif
ctag0.craft.message = <def.scp.craft_msg_exceptional>
ref2.tag.exceptional = 1
	if !<ctag0.craft.nomark>
	ref2.tag.exceptional = <name>
	ctag.craft.message = <def.scp.craft_msg_excepmark>
	endif
endif
if !<isempty <def.<ctag0.craft.skill>_aftercraft>
ref2.<def.<ctag0.craft.skill>_aftercraft>
endif
local.resource = <qval <ctag0.craft.material.<ctag0.craft.skill>> ? "_<ctag0.craft.material.<ctag0.craft.skill>>_" : "0">
if <ctag0.craft.material.<ctag0.craft.skill>>
	if !<isempty <def.<ctag0.craft.skill>_<ctag0.craft.material.<ctag0.craft.skill>>_aftercraft>>
	ref2.<def.<ctag0.craft.skill>_<ctag0.craft.material.<ctag0.craft.skill>>_aftercraft>>
	endif
endif
trigger @ItemCraft,<def.tat_as_argo>,<ref2.uid>
ref2.trigger @Craft,<def.tat_as_argo,<uid>
f_resenddialog d_craft_menu

[eof]