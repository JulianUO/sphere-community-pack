[function ColorElementalType]
local.max = 50
if <tag0.DamFire> > <local.max>
local.hue = <eval 1255 + ((<tag0.DamFire> - 50) / 10)>
local.max = <tag0.DamFire>
endif
if <tag0.DamCold> > <local.max>
local.hue = <eval 1261 + ((<tag0.DamCold> - 50) / 10)>
endif
if <tag0.DamPoison> > 50
local.hue = <eval 1267 + ((<tag0.DamPoison> - 50) / 10)>
local.max = <tag0.DamPoison>
endif
if <tag0.DamEnergy> > <local.max>
local.hue = <eval 1273 + ((<tag0.DamEnergy> - 50) / 10)>
local.max = <tag0.DamEnergy>
endif
return <local.hue>

[function ishuman]
if (<body> == c_man) || (<body> == c_woman)
return 1
endif
return 0

[function isgargoyle]
if (<body> == c_gargoyle_male) || (<body> == c_gargoyle_female)
return 1
endif
return 0

[function iselven]
if (<body> == c_elf_male) || (<body> == c_elf_female)
return 1
endif
return 0

[function ismale]
if (<body> == c_gargoyle_male) || (<body> == c_elf_male) || (<body> == c_man)
return 1
endif
return 0

[function isfemale]
if (<body> == c_gargoyle_female) || (<body> == c_elf_female) || (<body> == c_woman)
return 1
endif
return 0

[FUNCTION ishumanaid]
if (<ismale> || <isfemale>)
RETURN 1
endif
RETURN 0

[function f_resenddialog]
src.dialogclose <ARGV[0]>
sdialog <ARGS>

[function f_resources]
return <ARGV>

[function f_loopanim]
if <argv[1]>>1
	for <eval (<argv[1]>-1)>
	timerf <eval (<local._for>*<argv[2]>)>,anim <eval <argv[0]>>
	endfor
endif
anim <argv[0]>

[function f_loopsound]
if <argv[1]>>1
	for <eval (<argv[1]>-1)>
	timerf <eval (<local._for>*<argv[2]>)>,sound <eval <argv[0]>>
	endfor
endif
sound <argv[0]>

// <pet uid>.f_MakePetOf <owner uid>
[function f_MakePetOf]
serv.newitem i_memory
new.color = memory_ipet
new.more1 = 04
new.more2 = <serv.time>
new.morep = <p>
new.link = <args>
new.cont = <uid>

// Check if the introduced argument is a spell number
// Arguments = spell
[function isdamagespell]
IF ((<ARGN1> == 5) || (<ARGN1> == 12) || (<ARGN1> == 18) || (<ARGN1> == 30) || (<ARGN1> == 42) || (<ARGN1> == 49) || (<ARGN1> == 51) || (<ARGN1> == 55))
RETURN 1
ENDIF
RETURN 0

// Close all dialogs of the player
[FUNCTION closealldialogs]
IF (<DIALOGLIST.COUNT>)
FOR 0 <EVAL <DIALOGLIST.COUNT>-1>
DIALOGCLOSE <DIALOGLIST.<dLOCAL._FOR>.ID> <ARGN2>
ENDFOR
ENDIF

// New ADDITEM function with works with 65000+ items pile
// Arguments = id,amount
[function f_additem]
IF (0<DEF.<ARGV[0]>>)
IF (0<ARGV[1]>)
LOCAL.AMOUNT=<ARGV[1]>
ELSE
LOCAL.AMOUNT=1
ENDIF
WHILE <LOCAL.AMOUNT>
SERV.NEWITEM=<ARGV[0]>
IF (<SERV.ITEMDEF.<ARGV[0]>.CAN>&CAN_I_PILE)
IF (<LOCAL.AMOUNT> > 64999)
NEW.AMOUNT=65000
ELSE
NEW.AMOUNT=<LOCAL.AMOUNT>
ENDIF
ENDIF
LOCAL.AMOUNT -= <NEW.AMOUNT>
IF (0<ARGV[2]>)
NEW.CONT=<ARGV[2]>
ELSE
BOUNCE <NEW>
ENDIF
ENDWHILE
ENDIF

[FUNCTION f_skill_delay]
if !<isplayer>
return 0
endif
if <def.scp.SkillWaitingTimes> == 1
	if <args> != -1
	ctag.skillrecovery = <eval <serv.time> + <args>>
		if <serv.time> > <ctag.skillrecovery>
		ctag.skillrecovery =
		endif
	endif
endif

[FUNCTION max]
RETURN <QVAL <ARGN2> < <ARGN1>? <ARGN1> : <ARGN2>>

[FUNCTION min]
RETURN <QVAL <ARGN2> < <ARGN1>? <ARGN2> : <ARGN1>>

[FUNCTION FTIME]
IF (<ARGS> > 86400)
  return <EVAL <ARGS>/86400> days , <EVAL (<ARGS>%86400)/3600> hrs, <EVAL ((<ARGS>%86400)%3600)/60> min, <EVAL ((<ARGS>%86400)%3600)%60> sec
ELIF (<ARGS> > 3600)
  return <EVAL <ARGS>/3600> hrs, <EVAL (<ARGS>%3600)/60> min, <EVAL (<ARGS>%3600)%60> sec
ELIF (<ARGS> > 60)
  return <EVAL <ARGS>/60> min, <EVAL <ARGS>%60> sec
ELSE
  return <ARGS> sec
ENDIF

[function getargv]
local.toret = <strarg <args>>
args = <streat <args>>
return <argv[<local.toret>]>

[function isdialogopen]
for 0 <eval <dialoglist.count> - 1>
	if strmatch("<dialoglist.<dlocal._for>.id>","<args>")
	return 1
	endif
endfor
return 0

[function GetDispID]
serv.newitem <args>
local.disp = <new.dispid>
new.remove
return <local.disp>

[function f_GetColor]
serv.new<argv[0]> <argv[1]>
local.color = <new.color>
new.remove
return <local.color>

[function f_ReturnInfo]
serv.new<argv[0]> <argv[1]>
local.<argv[3]> = <eval <new.<argv[2]>>>
new.remove

[function abs] // Absolute value: <abs x>
if <argn1> < 0
	return <eval (<argn1> * -1)>
endif
return <argn1>

[function getpinpos] // Original position of pin. <getpinpos Pin#>
local.dX = <eval (<more2h> - <more1h>)>
local.dY = <eval (<more2l> - <more1l>)>

local.mapX = <qval (<tdata1>) ? <tdata1>:200>
local.mapY = <qval (<tdata2>) ? <tdata2>:200>

float.x = <floatval (((<dlocal.dX> / <dlocal.mapX>) * <strarg <pin.<argn1>>>) + <more1h>)>
float.y = <floatval (((<dlocal.dY> / <dlocal.mapY>) * <streat <pin.<argn1>>>) + <more1l>)>

return <feval <float.x>>,<feval <float.y>>

[eof]